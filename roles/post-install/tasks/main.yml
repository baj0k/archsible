# TODO: consider moving to separate role / post-install or separate hardening role
#- name: Post hardening
#  block:
#    - name: Install additional packages
#      pacman:
#        update_cache: yes
#        name:
#          - efitools
#        state: present
#
#    - name: Protect against Evil Maid attacks
#      block:
#        - name: Create a GUID for key owner identification - Generate GUID
#          command: uuidgen --random
#          register: guid
#
#        - name: Create a GUID for key owner identification - Save output to file
#          copy:
#            content: '{{ guid.stdout }}'
#            dest: /root/GUID.txt
#
# DOTFILES PLAYBOOK IDEAS
# TODO: prevent data loss - ensure that here are aliases set for rm, mv and cp with the '-i' flag that requires confirmation before executing command
# TODO: Read through Archwiki general recommendations page for additional configuration
# TODO: checkout coreutils improvements / alternatives from archwiki - saerch for wechiwiki core utilities
# TODO: checkout base9 from suckless and explore possibilities of using it along / instead of coreustils GNU

- name: Set timezone
  timezone:
    name: '{{ region }}/{{ city }}'
    hwclock: local

- name: Pacman configuration
  block:
    # TODO: implement rankmirrors
    # TODO: this task should be added to the cronjob and performed once a week / a month (find the optimal schedule)
    - name: Download mirrorlist
      get_url:
        url: 'https://archlinux.org/mirrorlist/?country={{ country }}&ip_version=4&protocol=https&use_mirror_status=on'
        dest: /etc/pacman.d/mirrorlist
        force: yes
    
    - name: Uncomment mirrors
      replace:
        path: /etc/pacman.d/mirrorlist
        regexp: '##.*\n#Server'
        replace: 'Server'
    
    - name: Enabel multilib repository and change pacman configuration options
      lineinfile:
        dest: /etc/pacman.conf
        regexp: '{{ item.regex }}'
        line: '{{ item.line }}'
        insertafter: '{{ item.insertafter }}'
      loop:
        - {regex: Architecture, line: Architecture = x86_64, insertafter: }
        - {regex: Color, line: Color, insertafter: }
        - {regex: ILoveCandy, line: ILoveCandy, insertafter: Color}
        - {regex: ParallelDownloads, line: ParallelDownloads = 5, insertafter: }
        - {regex: '^#\[multilib\]$', line: '[multilib]', insertafter: }
        - {regex: Include = /etc/pacman.d/mirrorlist, line: Include = /etc/pacman.d/mirrorlist, insertafter: [multilib] }

    - name: Update system
      pacman:
        update_cache: yes
        upgrade: yes
    
    - name: Install packages
      tags: long
      package:
        name:
          - git
            #      # TODO: is acpi needed on desktop or laptop only?
            #      - acpi
            #      - bat
            #      - wget
            #      - rsync
            #      - man-db
            #      - man-pages
            #      - base-devel
            #      - dash
            #      # fonts TODO: test whether all below fonts are needed / additional are needed
            #      - noto-fonts
            #      - ttf-inconsolata
            #      - ttf-liberation
            #      - ttf-joypixels
            #      - ttf-dejavu
            #      - ttf-font-awesome
        state: present
    
          #- name: AUR - Install AUR packages
          #  aur:
          #    name: 
          #      - pikaur
          #      - neovim-git
          #      - girara-git
          #      - zathura-git
          #    use: makepkg
          #    state: present
          #  when: aur

- name: User configuration
  block:
# TODO: check if all the groups are necessary / need to add more
    - name: Create system user
      user:
        name: "{{ user_username }}"
        groups:
          - adm
          - games
          - audio
          - http
          - sys
          - wheel
          - kvm
          - video
        append: yes
        password: "{{ user_password | password_hash('sha512') }}"
        update_password: on_create

    - name: Give passwordless sudo access to the wheel group
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '%wheel ALL='
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: '/usr/sbin/visudo --check --file=%s'

- name: Localization settings
  block:
    - name: Configure locale.gen
      lineinfile:
        dest: /etc/locale.gen
        regexp: '{{ item.regex }}'
        line: '{{ item.line }}'
      loop:
        - {regex: en_US\.UTF-8 UTF-8, line: en_US.UTF-8 UTF-8}
        - {regex: '{{ country }}\.UTF-8 UTF-8', line: '{{ country|lower }}_{{ country }}.UTF-8 UTF-8'}
    
    - name: Generate locales
      command: locale-gen
    
    - name: Create locale.conf
      lineinfile:
        create: yes
        dest: /etc/locale.conf
        regexp: LANG=en_US\.UTF-8
        line: LANG=en_US.UTF-8
    
    - name: Create vconsole.conf
      blockinfile:
        create: yes
        dest: /etc/vconsole.conf
        block: |
          'KEYMAP={{ country|lower }}'
          FONT=Lat2-Terminus16
          FONT_MAP=8859-2

    - name: Set hostname
      lineinfile:
        create: yes
        dest: /etc/hostname
        line: '{{ hostname }}'
