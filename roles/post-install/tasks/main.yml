# TODO: consider moving to separate role / post-install or separate hardening role
#- name: Post hardening
#  block:
#    - name: Install additional packages
#      pacman:
#        update_cache: yes
#        name:
#          - efitools
#        state: present
#
#    - name: Protect against Evil Maid attacks
#      block:
#        - name: Create a GUID for key owner identification - Generate GUID
#          command: uuidgen --random
#          register: guid
#
#        - name: Create a GUID for key owner identification - Save output to file
#          copy:
#            content: '{{ guid.stdout }}'
#            dest: /root/GUID.txt
##
#      package:
#        name:
#          #- noto-fonts
#          #- ttf-inconsolata
#          #- ttf-liberation
#          #- ttf-joypixels
#          #- ttf-dejavu
#          #- ttf-font-awesome
          # TODO: is acpi needed on desktop or laptop only?
#          #- acpi
#          #- bat
#          #- dash
#          #- zathura
#
# DOTFILES PLAYBOOK IDEAS
# TODO: prevent data loss - ensure that here are aliases set for rm, mv and cp with the '-i' flag that requires confirmation before executing command
# TODO: Read through Archwiki general recommendations page for additional configuration
# TODO: checkout coreutils improvements / alternatives from archwiki - saerch for wechiwiki core utilities
# TODO: checkout base9 from suckless and explore possibilities of using it along / instead of coreustils GNU

- name: Localization settings
  tags: done
  block:
    - name: Set timezone
      timezone:
        name: '{{ region }}/{{ city }}'
        hwclock: local

    # TODO: create a pull request to the locale_gen.py ansible module. 
    # Fix invalid regex on arch linux and locales not being checked while available with locale -a command
    # https://github.com/ansible-collections/community.general/blob/main/plugins/modules/system/locale_gen.py
    - name: Generate locales
      locale_gen:
        name: '{{ item }}'
      loop:
        - en_US.UTF-8
        - '{{ country|lower }}_{{ country }}.UTF-8'

    - name: Create locale.conf
      lineinfile:
        create: yes
        dest: /etc/locale.conf
        regexp: LANG=en_US\.UTF-8
        line: LANG=en_US.UTF-8
    
    - name: Create vconsole.conf
      blockinfile:
        create: yes
        dest: /etc/vconsole.conf
        block: |
          'KEYMAP={{ country|lower }}'
          FONT=Lat2-Terminus16
          FONT_MAP=8859-2

    # TODO: check the hostname module
    - name: Set hostname
      lineinfile:
        create: yes
        dest: /etc/hostname
        line: '{{ hostname }}'

- name: User configuration
  tags: done
  block:
# TODO: check if all the groups are necessary / need to add more
# TODO: shell specification?
    - name: Create system user
      user:
        name: "{{ user_username }}"
        groups:
          - adm
          - games
          - sys
          - wheel
          - lp
          - audio
          - kvm
          - video
        append: yes
        password: "{{ user_password | password_hash('sha512') }}"
        update_password: on_create

    - name: Give passwordless sudo access to the wheel group
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '%wheel ALL='
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: '/usr/sbin/visudo --check --file=%s'

- name: Package management
  block:
    # TODO: reflector --fastest 5 --country pl --age 12 --protocol https --sort rate --ipv4
    # TODO: this task should be added to the cronjob and performed once a week / a month (find the optimal schedule)
    - name: Download mirrorlist
      get_url:
        url: 'https://archlinux.org/mirrorlist/?country={{ country }}&ip_version=4&protocol=https&use_mirror_status=on'
        dest: /etc/pacman.d/mirrorlist
        force: yes
    
    - name: Uncomment mirrors
      replace:
        path: /etc/pacman.d/mirrorlist
        regexp: '##.*\n#Server'
        replace: 'Server'
    
    - name: Enabel multilib repository and change pacman configuration options
      lineinfile:
        dest: /etc/pacman.conf
        regexp: '{{ item.regex }}'
        line: '{{ item.line }}'
        insertafter: '{{ item.insertafter }}'
      loop:
        - {regex: Architecture, line: Architecture = x86_64, insertafter: }
        - {regex: Color, line: Color, insertafter: }
        - {regex: ILoveCandy, line: ILoveCandy, insertafter: Color}
        - {regex: ParallelDownloads, line: ParallelDownloads = 5, insertafter: }
        - {regex: '^#\[multilib\]$', line: '[multilib]', insertafter: }
        - {regex: Include = /etc/pacman.d/mirrorlist, line: Include = /etc/pacman.d/mirrorlist, insertafter: [multilib] }

    - name: Update system
      pacman:
        update_cache: yes
        upgrade: yes
    
    - name: Install essential packages
      tags: long
      package:
        name:
          - git
          - wget
          - rsync
          - man-db
          - man-pages
          - base-devel
        state: present
    
    - name: Install AUR helper
      become: yes
      become_user: '{{ user_username }}'
      aur:
        name: yay
        use: makepkg
        state: present

# TODO: make GUI optional? (move to dotfiles maybe?)
- name: Graphical user interface
  block:
    - name: Install xorg
      package:
        name: 
          - xorg
          - xorg-xinit
          - xwallpaper
          - xcompmgr
        state: present

    # TODO: fix for amd and nvidia drivers (current setup works for intel)
    - name: Install GPU drivers
      package:
        name: 
          - mesa
          - lib32-mesa
          - xf86-video-intel
          - vulkan-intel
          - intel-media-driver
        state: present

    # TODO: currently no display manager is used
    - name: Install display and window managers
      package:
        name: 
          - i3-gaps
          - i3blocks
        state: present
