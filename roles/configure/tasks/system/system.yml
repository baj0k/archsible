# TODO: optimal mirror selection task is temporary, mirrorlist should be generated on post-configuration playbook after reboot with: reflector --fastest 5 --country Poland --age 12 --protocol https --sort rate --ipv4
# TODO: optimal mirror selection should be done periodically (after reboot?) (https://wiki.archlinux.org/title/Systemd/Timers)
# TODO: optimal mirror selection for blackarch repositories: rankmirrors -t /etc/pacman.d/blackarch-mirrorlist -r blackarch (remove -t option after manually ranking the mirrors)
#
- name: Network - Setup DNS
  lineinfile:
    path: /etc/resolv.conf
    line: nameserver 1.1.1.1
    state: present

- name: Pacman - Download mirrorlist
  get_url:
    url: "https://archlinux.org/mirrorlist/?country=PL&protocol=https&use_mirror_status=on"
    dest: /etc/pacman.d/mirrorlist
    force: yes

- name: Pacman - Uncomment mirrors
  replace:
    path: /etc/pacman.d/mirrorlist
    regexp: '##.*\n#Server'
    replace: 'Server'

- name: Pacman - Symlink configuration
  file:
    src: "{{ ansible_env.PWD }}/files/etc/pacman.conf"
    path: /etc/pacman.conf
    state: link
    force: yes

- name: System - Sudoers NOPASSWD for the wheel group.
  lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '%wheel ALL='
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'

- name: System - Update system
  pacman:
    update_cache: yes
    upgrade: yes

- name: System - Install packages
  package:
    name:
      #      - git
      #      - acpi
      - bat
      - wget
      - rsync
      - man-db
      - man-pages
      - base-devel
      - dash
      # fonts
      - noto-fonts
      - ttf-inconsolata
      - ttf-liberation
      - ttf-joypixels
      - ttf-dejavu
      - ttf-font-awesome
    state: present

      #- name: AUR - Install AUR packages
      #  become: no
      #  aur:
      #    name: 
      #      - pikaur
      #      - neovim-git
      #      - girara-git
      #      - zathura-git
      #    use: makepkg
      #    state: present
      #  when: aur


# TODO: check if all the groups are necessary / need to add more
#    - name: Create user
#      user:
#        name: "{{ user_username }}"
#        groups:
#          - adm
#          - games
#          - audio
#          - http
#          - sys
#          - wheel
#          - kvm
#          - video
#        append: yes
#        password: "{{ user_password | password_hash('sha512') }}"
#        update_password: on_create
#
#    - name: Give passwordless sudo access to the wheel group
#      lineinfile:
#        # TODO: in case of error replace path
#        #path: /mnt/etc/sudoers.d/wheel
#        path: /etc/sudoers
#        state: present
#        regexp: '%wheel ALL='
#        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
#        validate: '/usr/sbin/visudo --check --file=%s'

